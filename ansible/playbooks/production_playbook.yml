---
- name: Prepare Prod server
  hosts: prodserver
  become: yes
  become_user: deploy
  tasks:
    - name: ping
      shell: pwd >> pwd2.txt

    - name: Pull from Git
      ansible.builtin.git:
        repo: git@github.com:Lemeri02/mlops_practice_4.git
        dest: /home/deploy/mlops_practice_4
        accept_hostkey: true
        key_file: /home/deploy/.ssh/id_rsa

    - name: Ð¡reate venv
      ansible.builtin.shell: python3 -m venv venv
      args:
        executable: /bin/bash
        chdir: /home/deploy/mlops_practice_4

    - name: Install requirements
      become: yes
      become_user: deploy
      ansible.builtin.pip:
        requirements: /home/deploy/mlops_practice_4/requirements.txt
        virtualenv: /home/deploy/mlops_practice_4/venv
        chdir: /home/deploy/mlops_practice_4

    - name: Run venv
      ansible.builtin.shell: source /home/deploy/mlops_practice_4/venv/bin/activate
      args:
        executable: /bin/bash

    - name: Install dvc ssh
      ansible.builtin.shell: pip install dvc[ssh]
      args:
        executable: /bin/bash

    - name: Set DVC password
      command: dvc remote modify ssh-storage password {{ ansible_become_pass }}
      args:
        chdir: /home/deploy/mlops_practice_4

    - name: Run DVC pull
      command: dvc pull
      args:
        chdir: /home/deploy/mlops_practice_4

    - name: Installing flask module
      pip:
        executable: pip3
        name: flask
        state: latest

    - name: run flask app
      shell: nohup /home/deploy/mlops_practice_4/venv/bin/python3 /home/deploy/mlops_practice_4/scripts/production/app.py > log.txt 2>&1 &   
  vars:
    ansible_ssh_pass: "{{ lookup('env', 'DEPLOY_PASSWORD') }}"
    ansible_become_pass: "{{ lookup('env', 'DEPLOY_PASSWORD') }}"
